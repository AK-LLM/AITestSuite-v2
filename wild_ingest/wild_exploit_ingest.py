import os
import requests
from datetime import datetime

STAGING = "./staging/"
os.makedirs(STAGING, exist_ok=True)

# --- HuggingFace LLM Jailbreaks (raw prompt list)
hug_url = "https://huggingface.co/datasets/teknium/OpenHermes-2.5-Jailbreaks/resolve/main/jailbreaks/jailbreaks.txt"
r = requests.get(hug_url)
if r.status_code == 200:
    fname = f"{STAGING}huggingface_jailbreaks_{datetime.now().strftime('%Y%m%d')}.txt"
    with open(fname, "w", encoding="utf-8") as f:
        f.write("# Source: HuggingFace LLM Jailbreaks\n\n")
        f.write(r.text)
    print(f"Fetched {hug_url} -> {fname}")
else:
    print(f"Failed to fetch {hug_url}")

# --- LLM-Attacks.org scraping (basic, for latest text prompts)
llm_url = "https://llm-attacks.org/"
try:
    r = requests.get(llm_url)
    # Naive scrape for 'prompt' tags/sections (improve as needed)
    prompts = []
    for line in r.text.splitlines():
        if "prompt" in line.lower():
            prompts.append(line.strip())
    if prompts:
        fname = f"{STAGING}llm_attacks_scrape_{datetime.now().strftime('%Y%m%d')}.txt"
        with open(fname, "w", encoding="utf-8") as f:
            f.write("# Source: llm-attacks.org (auto-scrape, unfiltered)\n\n")
            for p in prompts:
                f.write(p + "\n")
        print(f"Fetched {llm_url} -> {fname}")
except Exception as e:
    print(f"Error scraping {llm_url}: {e}")

# --- Google Sheet Wild Jailbreaks (manual step, for legal reasons)
print("For Google Sheet community jailbreaks, download manually and save as CSV or TXT in /staging/.")

print("Wild exploit ingestion complete. Check /staging/ for new prompt/jailbreak files.")
